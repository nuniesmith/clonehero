services:
  nginx:
    container_name: clonehero_nginx
    image: nuniesmith/clonehero:nginx
    environment:
      TZ: "${TZ}"
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_SSL_PORT}:443"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  db:
    image: postgres:latest
    container_name: clonehero_db
    restart: always
    env_file:
      - .env
    environment:
      TZ: "${TZ}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  sync:
    container_name: clonehero_sync
    image: nuniesmith/clonehero:sync
    env_file:
      - .env
    volumes:
      - ./data/clonehero_content:/var/syncthing/clonehero_content:rw
    ports:
      - "${SYNC_PORT}:8384"
    restart: unless-stopped
    command: ["-home", "/var/syncthing/config"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SYNC_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  ch_server:
    container_name: ch_server
    image: nuniesmith/clonehero:server
    ports:
      - "${CH_SERVER_PORT}:14242"
    restart: unless-stopped

  backend:
    container_name: clonehero_backend
    image: nuniesmith/clonehero:backend
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
      sync:
        condition: service_healthy
      ch_server:
        condition: service_started
    env_file:
      - .env
    expose:
      - "${BACKEND_PORT}"
    command: ["sh", "-c", "sleep 5 && python src/worker.py"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:${BACKEND_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    container_name: clonehero_api
    image: nuniesmith/clonehero:api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: >
      gunicorn -w 4 -k uvicorn.workers.UvicornWorker src.main:app --bind 0.0.0.0:${API_PORT}
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --fail http://localhost:${API_PORT}/health || exit 1"]
      interval: 30s
      start_period: 60s
      retries: 3
    restart: unless-stopped

  frontend:
    container_name: clonehero_frontend
    image: nuniesmith/clonehero:frontend
    depends_on:
      api:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./frontend:/app/frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:8501"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:${FRONTEND_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pg_data:
    driver: local
  logs:
    driver: local